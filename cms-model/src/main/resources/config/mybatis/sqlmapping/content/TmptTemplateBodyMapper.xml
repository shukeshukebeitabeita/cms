<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bsb.cms.mapper.content.TmptTemplateBodyMapper" >
  <resultMap id="BaseResultMap" type="tmptTemplateBody" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="TEMPLATE_ID" property="templateId" jdbcType="BIGINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="tmptTemplateBody" extends="BaseResultMap" >
    <result column="TEMPLATE_BODY" property="templateBody" jdbcType="LONGVARCHAR" />
  </resultMap>
  
   <sql id="Base_Column_List" >
    ID, TEMPLATE_ID
  </sql>
  <sql id="Blob_Column_List" >
    TEMPLATE_BODY
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tmpt_template_body
    where ID = #{id,jdbcType=BIGINT}
  </select>
  
   <select id="selectByTemplateId" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tmpt_template_body
    where TEMPLATE_ID = #{templateId,jdbcType=BIGINT}
  </select>
  
   <insert id="insert" parameterType="tmptTemplateBody" useGeneratedKeys="true" keyProperty="id">
    insert into tmpt_template_body (TEMPLATE_ID, TEMPLATE_BODY
      )
    values (#{templateId,jdbcType=BIGINT}, #{templateBody,jdbcType=LONGVARCHAR}
      )
  </insert>
  
  <update id="updateByTemplateId" parameterType="tmptTemplateBody" >
    update tmpt_template_body
    set TEMPLATE_BODY = #{templateBody,jdbcType=LONGVARCHAR}
    where TEMPLATE_ID = #{templateId,jdbcType=BIGINT}
  </update>
  
 <!--  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
 

  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bsb.cms.model.po.content.TmptTemplateBodyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tmpt_template_body
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tmpt_template_body
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.bsb.cms.model.po.content.TmptTemplateBodyExample" >
    delete from tmpt_template_body
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>


  <update id="updateByExampleSelective" parameterType="map" >
    update tmpt_template_body
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.templateId != null" >
        TEMPLATE_ID = #{record.templateId,jdbcType=BIGINT},
      </if>
      <if test="record.templateBody != null" >
        TEMPLATE_BODY = #{record.templateBody,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByExample" parameterType="map" >
    update tmpt_template_body
    set ID = #{record.id,jdbcType=BIGINT},
      TEMPLATE_ID = #{record.templateId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bsb.cms.model.po.content.TmptTemplateBody" >
    update tmpt_template_body
    <set >
      <if test="templateId != null" >
        TEMPLATE_ID = #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateBody != null" >
        TEMPLATE_BODY = #{templateBody,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
   -->
</mapper>